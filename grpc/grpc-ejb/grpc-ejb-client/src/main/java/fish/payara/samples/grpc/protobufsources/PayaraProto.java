/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright (c) 2022 Payara Foundation and/or its affiliates. All rights reserved.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common Development
 * and Distribution License("CDDL") (collectively, the "License").  You
 * may not use this file except in compliance with the License.  You can
 * obtain a copy of the License at
 * https://github.com/payara/Payara/blob/master/LICENSE.txt
 * See the License for the specific
 * language governing permissions and limitations under the License.
 *
 * When distributing the software, include this License Header Notice in each
 * file and include the License file at glassfish/legal/LICENSE.txt.
 *
 * GPL Classpath Exception:
 * The Payara Foundation designates this particular file as subject to the "Classpath"
 * exception as provided by the Payara Foundation in the GPL Version 2 section of the License
 * file that accompanied this code.
 *
 * Modifications:
 * If applicable, add the following below the License Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyright [year] [name of copyright owner]"
 *
 * Contributor(s):
 * If you wish your version of this file to be governed by only the CDDL or
 * only the GPL Version 2, indicate your decision by adding "[Contributor]
 * elects to include this software in this distribution under the [CDDL or GPL
 * Version 2] license."  If you don't indicate a single choice of license, a
 * recipient has the option to distribute your version of this file under
 * either the CDDL, the GPL Version 2 or to extend the choice of license to
 * its licensees as provided above.  However, if you add GPL Version 2 code
 * and therefore, elected the GPL Version 2 license, then the option applies
 * only if the new code is made subject to such option by the copyright
 * holder.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: payara_ejb.proto

package fish.payara.samples.grpc.protobufsources;

public final class PayaraProto {
  private PayaraProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fish_payara_samples_grpc_PayaraReq_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_fish_payara_samples_grpc_PayaraReq_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_fish_payara_samples_grpc_PayaraResp_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_fish_payara_samples_grpc_PayaraResp_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\020payara_ejb.proto\022\030fish.payara.samples." +
      "grpc\"\034\n\tPayaraReq\022\017\n\007message\030\001 \001(\t\"\035\n\nPa" +
      "yaraResp\022\017\n\007message\030\001 \001(\t2k\n\rPayaraServi" +
      "ce\022Z\n\013communicate\022#.fish.payara.samples." +
      "grpc.PayaraReq\032$.fish.payara.samples.grp" +
      "c.PayaraResp\"\000B)\n\030fish.payara.samples.gr" +
      "pcB\013PayaraProtoP\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_fish_payara_samples_grpc_PayaraReq_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_fish_payara_samples_grpc_PayaraReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_fish_payara_samples_grpc_PayaraReq_descriptor,
        new String[] { "Message", });
    internal_static_fish_payara_samples_grpc_PayaraResp_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_fish_payara_samples_grpc_PayaraResp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_fish_payara_samples_grpc_PayaraResp_descriptor,
        new String[] { "Message", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
